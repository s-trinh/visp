name: Windows-dep-src

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SUN'

jobs:
  build-windows-dep-src:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016, windows-2019]

    steps:
    # https://github.com/marketplace/actions/cancel-workflow-action
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.5.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create a workspace
      run: setx VISP_WS "C:\visp-ws"

    - name: Clone OpenCV from source
      run: |
        pwd
        git clone --depth 1 https://github.com/opencv/opencv.git $env:VISP_WS/opencv
        mkdir $env:VISP_WS\opencv\build
        cd $env:VISP_WS\opencv\build

    - name: Configure and build OpenCV from source (VS2017)
      if: matrix.os == 'windows-2016'
      run: |
        pwd
        cd $env:VISP_WS\opencv\build
        cmake -G "Visual Studio 15 2017" -A "x64" $env:VISP_WS\opencv -DCMAKE_INSTALL_PREFIX=$env:VISP_WS\opencv\build

    - name: Configure and build OpenCV from source (VS2019)
      if: matrix.os == 'windows-2019'
      run: |
        pwd
        cd $env:VISP_WS\opencv\build
        cmake -G "Visual Studio 16 2019" -A "x64" $env:VISP_WS\opencv -DCMAKE_INSTALL_PREFIX=$env:VISP_WS\opencv\build

    - name: Build OpenCV from source
      run: |
        cmake --build . --config Release --target install
        setx OpenCV_DIR "$env:VISP_WS\opencv\build"

    - name: Clone librealsense from source
      run: |
        pwd
        git clone --depth 1 https://github.com/IntelRealSense/librealsense.git $env:VISP_WS/librealsense
        mkdir $env:VISP_WS\librealsense\build
        cd $env:VISP_WS\librealsense\build

    - name: Configure and build librealsense from source (VS2017)
      if: matrix.os == 'windows-2016'
      run: |
        pwd
        cd $env:VISP_WS\librealsense\build
        cmake -G "Visual Studio 15 2017" -A "x64" $env:VISP_WS\librealsense -DCMAKE_INSTALL_PREFIX=$env:VISP_WS\librealsense\build

    - name: Configure and build librealsense from source (VS2019)
      if: matrix.os == 'windows-2019'
      run: |
        pwd
        cd $env:VISP_WS\librealsense\build
        cmake -G "Visual Studio 16 2019" -A "x64" $env:VISP_WS\librealsense -DCMAKE_INSTALL_PREFIX=$env:VISP_WS\librealsense\build

    - name: Build librealsense from source
      run: |
        cmake --build . --config Release --target install
        setx REALSENSE2_DIR "$env:VISP_WS\librealsense\build\install"

    - name: Clone ViSP-images
      run: |
        git clone --depth 1 https://github.com/lagadic/ViSP-images $env:VISP_WS\ViSP-images
        setx VISP_INPUT_IMAGE_PATH " $env:VISP_WS\ViSP-images"

    - name: Configure CMake and build ViSP (VS2017)
      if: matrix.os == 'windows-2016'
      run: |
        pwd
        mkdir build
        cd build
        cmake -G "Visual Studio 15 2017" -A "x64" ..

    - name: Configure CMake and build ViSP (VS2019)
      if: matrix.os == 'windows-2019'
      run: |
        pwd
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -A "x64" ..

    - name: Build ViSP
      run: |
        pwd
        cd build
        cmake --build . --config Release --target install

    - name: Set ViSP path (VS2017)
      if: matrix.os == 'windows-2016'
      run: setx Path "%Path%:$env:GITHUB_WORKSPACE\visp\build\install\x64\vc15\bin"

    - name: Set ViSP path (VS2019)
      if: matrix.os == 'windows-2019'
      run: setx Path "%Path%:$env:GITHUB_WORKSPACE\visp\build\install\x64\vc16\bin"

    - name: Run unit tests
      working-directory: build
      run: ctest --output-on-failure
